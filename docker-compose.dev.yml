version: "3"
services:
  webproxy:
    image: "nginx"
    restart: unless-stopped
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 7655:80
    networks:
      - frontend
      - backend
  frontend:
    build:
      context: "frontend"
      dockerfile: "Dockerfile.dev.dockerfile"
    restart: unless-stopped
    ports:
      - "8080:8080"
    stdin_open: true
    tty: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - "./frontend/public:/app/public"
      - "./frontend/src:/app/src"
    networks:
      - frontend
  backend:
    build:
      context: "backend"
      dockerfile: "Dockerfile.dev.dockerfile"
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - "./backend/main.js:/app/main.js"
      - "./backend/config.json:/app/config.json"
      - "./backend/modules:/app/modules"
      - "./backend/models:/app/models"
      - "./backend/middleware:/app/middleware"
    networks:
      - backend
  db:
    image: "mongo"
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db
      - mongoconfig:/data/configdb
    networks:
      - backend
volumes:
  mongodata:
    external: false
  mongoconfig:
    external: false

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge